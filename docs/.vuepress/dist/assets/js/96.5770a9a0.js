(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{470:function(n,e,a){"use strict";a.r(e);var t=a(17),s=Object(t.a)({},(function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"venus-sector-manager-的配置解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#venus-sector-manager-的配置解析"}},[n._v("#")]),n._v(" venus-sector-manager 的配置解析")]),n._v(" "),a("p",[a("code",[n._v("venus-sector-manager")]),n._v(" 是与链交互、维持扇区的注意，我们来了解一下它的配置文件结构和配置方式。")]),n._v(" "),a("p",[n._v("在完成初始化之后，我们可以得到一份原始的配置内容：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\n# Default config:\n[Common]\n[Common.API]\n#Chain = "/ip4/{api_host}/tcp/{api_port}"\n#Messager = "/ip4/{api_host}/tcp/{api_port}"\n#Market = "/ip4/{api_host}/tcp/{api_port}"\n#Gateway = ["/ip4/{api_host}/tcp/{api_port}"]\n#Token = "{some token}"\n#ChainEventInterval = "1m0s"\n#\n[[Common.PieceStores]]\n#Name = "{store_name}"\n#Path = "{store_path}"\n#\n[[Common.PersistStores]]\n#Name = "{store_name}"\n#Path = "{store_path}"\n#Strict = false\n#ReadOnly = false\n#Weight = 1\n[Common.PersistStores.Meta]\n#SomeKey = "SomeValue"\n#\n[[Miners]]\n#Actor = 10086\n[Miners.Sector]\n#InitNumber = 0\n#MinNumber = 10\n#MaxNumber = 1000000\n#Enabled = true\n#EnableDeals = false\n#LifetimeDays = 540\n#Verbose = false\n[Miners.SnapUp]\n#Enabled = false\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#SendFund = true\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n#MessageConfidential = 15\n#ReleaseCondidential = 30\n[Miners.SnapUp.Retry]\n#MaxAttempts = 10\n#PollInterval = "3m0s"\n#APIFailureWait = "3m0s"\n#LocalFailureWait = "3m0s"\n[Miners.Commitment]\n#Confidence = 10\n[Miners.Commitment.Pre]\n#SendFund = true\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Pre.Batch]\n#Enabled = false\n#Threshold = 16\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Prove]\n#SendFund = true\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Prove.Batch]\n#Enabled = false\n#Threshold = 16\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Terminate]\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#SendFund = true\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.Commitment.Terminate.Batch]\n#Enabled = false\n#Threshold = 5\n#MaxWait = "1h0m0s"\n#CheckInterval = "1m0s"\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n[Miners.PoSt]\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n#Enabled = true\n#StrictCheck = true\n#GasOverEstimation = 1.2\n#MaxFeeCap = "5 nanoFIL"\n#Confidence = 10\n#ChallengeConfidence = 10\n[Miners.Proof]\n#Enabled = false\n#\n')])])]),a("p",[n._v("我们将逐一分析其中的可配置项。")]),n._v(" "),a("h2",{attrs:{id:"common"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[n._v("#")]),n._v(" [Common]")]),n._v(" "),a("p",[a("code",[n._v("Common")]),n._v(" 是公共配置，又分成三个子配置项：")]),n._v(" "),a("h3",{attrs:{id:"common-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-api"}},[n._v("#")]),n._v(" [Common.API]")]),n._v(" "),a("p",[a("code",[n._v("Common.API")]),n._v(" 是接口相关的配置，其内容包含：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[Common.API]\n# 链服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nChain = "/ip4/{api_host}/tcp/{api_port}"\n\n# 消息服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nMessager = "/ip4/{api_host}/tcp/{api_port}"\n\n# 市场服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nMarket = "/ip4/{api_host}/tcp/{api_port}"\n\n# 事件网关服务地址，必填项，字符串类型\n# 根据所使用的服务实际情况填写\nGateway = ["/ip4/{api_host}/tcp/{api_port}"]\n\n# 服务 token， 必填项，字符串类型\n# 根据所使用的服务实际情况填写\nToken = "{some token}"\n\n# 侦测链高度变化的间隔时间，选填项，时间类型\n# 默认值为 1min\n#ChainEventInterval = "1m0s"\n')])])]),a("h3",{attrs:{id:"common-piecestores"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-piecestores"}},[n._v("#")]),n._v(" [[Common.PieceStores]]")]),n._v(" "),a("p",[a("code",[n._v("Common.PieceStores")]),n._v("是用于配置本地订单 "),a("code",[n._v("piece")]),n._v(" 数据的选项。当存在可用的离线存储时，可以配置此项，避免通过公网获取订单的"),a("code",[n._v("piece")]),n._v(" 数据。")]),n._v(" "),a("p",[n._v("每一个本地存储目录对应一个 "),a("code",[n._v("Common.PieceStores")]),n._v(" 配置块。")]),n._v(" "),a("h4",{attrs:{id:"基础配置范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础配置范例"}},[n._v("#")]),n._v(" 基础配置范例")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[[Common.PieceStores]]\n# 路径，必填项，字符串类型\nPath = "/mnt/mass/piece1"\n\n')])])]),a("h3",{attrs:{id:"common-persiststores"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-persiststores"}},[n._v("#")]),n._v(" [[Common.PersistStores]]")]),n._v(" "),a("p",[a("code",[n._v("Common.PersistStores")]),n._v(" 用于配置扇区持久化数据存储。与之对应的是 "),a("code",[n._v("venus-worker")]),n._v(" 中的 "),a("code",[n._v("remote_store")]),n._v(" 概念。")]),n._v(" "),a("p",[n._v("与 "),a("code",[n._v("Common.PieceStores")]),n._v(" 类似，每一个持久化存储目录对应一个 "),a("code",[n._v("Common.PersistStores")]),n._v(" 配置块。")]),n._v(" "),a("h4",{attrs:{id:"基础配置范例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础配置范例-2"}},[n._v("#")]),n._v(" 基础配置范例")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[[Common.PersistStores]]\n# 名称， 选填项，字符串类型\n# 默认为路径对应的绝对路径\n#Name = "remote-store1"\n\n# 路径，必填项，字符串类型\n# 建议使用绝对路径\nPath = "/mnt/remote/10.0.0.14/store"\n\n# 只读，选填项，布尔类型\n# 默认值为 false\n# 自 v0.4.0 起，持久化存储分配逻辑转到 vsmgr 上\n# 可通过此配置设置存储是否可以继续写入\n#ReadOnly = false\n\n# 权重，选填项，数字类型\n# 默认值为 1\n# 当填写值为 0 时，等效于 1\n# 自 v0.4.0 起，持久化存储分配逻辑转到 vsmgr 上\n# 可通过此配置设置多个持久化存储之间的权重配比\n#Weight = 1\n\n# 元信息，选填项，字典类型\n# 内部值为 Key = "Value" 的格式\n# 默认值为 null\n# 用于支持不同类型存储方案的预备，目前没有任何作用\n[Common.PersistStores.Meta]\n#SomeKey = "SomeValue"\n#\n')])])]),a("h2",{attrs:{id:"miners"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners"}},[n._v("#")]),n._v(" [[Miners]]")]),n._v(" "),a("p",[a("code",[n._v("Miners")]),n._v(" 是较为重要的一个配置项，用于针对某一个 "),a("code",[n._v("SP")]),n._v(" 定义其行为和策略。")]),n._v(" "),a("p",[a("code",[n._v("venus-cluster")]),n._v(" 被设计为同一套组件可以支持多个 "),a("code",[n._v("SP")]),n._v(" ，在 "),a("code",[n._v("venus-sector-manager")]),n._v(" 中的具体表现就是可以根据需要设置多个 "),a("code",[n._v("Miners")]),n._v(" 配置块。")]),n._v(" "),a("h3",{attrs:{id:"主配置项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主配置项"}},[n._v("#")]),n._v(" 主配置项")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[[Miners]]\n# `SP` actor id， 必填项，数字类型\nActor = 10086\n")])])]),a("p",[n._v("除主配置向外， "),a("code",[n._v("Miners")]),n._v(" 同样包含多个不同的子配置块，下面我们一一分析")]),n._v(" "),a("h3",{attrs:{id:"miners-sector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-sector"}},[n._v("#")]),n._v(" [Miners.Sector]")]),n._v(" "),a("p",[n._v("用于控制扇区分配的策略。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[Miners.Sector]\n# 扇区起始编号，选填项，数字类型\n# 默认值为 0\n# 已废弃\nInitNumber = 0\n\n# 扇区最小编号，选填项，数字类型\n# 默认值为 null\n# 与 InitNumber 相比，当设置此项时，\n# 1. 任何时刻，分配器都不会给出小于等于此值的扇区编号。\n# 2. 此项的值可以在集群运行过程中调整。\n#    提高配置值，分配结果将始终遵循 1) 的描述。\n#    降低配置值通常不会产生效果。\n#\n# 未设置此项时，如果 InitNumber 为非0值，则等效于此项。\n#MinNumber = 10\n\n# 扇区编号上限，选填项，数字类型\n# 默认值为 null， 表示无上限限制\n#MaxNumber = 1000000\n\n# 是否允许分配扇区， 选填项，布尔类型\n# 默认值为 true， 即开启分配\n#Enabled = true\n\n# 是否允许分配订单， 选填项，布尔类型\n# 默认值为 false\n#EnableDeals = false\n\n# CC 扇区的生命周期，单位为 天，选填项，数字类型\n# 默认值为 540\n#LifetimeDays = 540\n\n# Sector 相关模块的日志详尽程度，选填项，布尔类型\n# 默认值为 false，即精简日志输出\n#Verbose = false\n")])])]),a("h3",{attrs:{id:"miners-snapup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-snapup"}},[n._v("#")]),n._v(" [Miners.SnapUp]")]),n._v(" "),a("p",[n._v("用于控制 "),a("code",[n._v("SnapDeal")]),n._v(" 的生产策略")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[Miners.SnapUp]\n# 是否启用，选填项，布尔类型\n# 默认值为 false\n#Enabled = false\n\n# 发送地址，在启用的情况下为必填项，地址类型\n#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# 提交上链消息时是否从 Sender 发送必要的资金，选填项，布尔类型\n# 默认值为 true\n#SendFund = true\n\n# 单条提交消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为1.2\n#GasOverEstimation = 1.2\n\n# 单条提交消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n\n# Update 消息上链的确信高度，选填项，数字类型\n# 默认值为 15\n#MessageConfidential = 15\n\n# 释放旧数据存储空间的确信高度，选填项，数字类型\n# 默认值为 30\n#ReleaseCondidential = 30\n\n# SnapUp 提交重试策略\n[Miners.SnapUp.Retry]\n\n# 最大重试次数，选填项，数字类型\n# 默认为 NULL，表示不做限制\n#MaxAttempts = 10\n\n# 轮询状态的间隔，选填项，事件类型\n# 默认值为 3min\n#PollInterval = "3m0s"\n\n# API 接口异常的重试间隔，选填项，事件类型\n# 默认值为 3min\n#APIFailureWait = "3m0s"\n\n# 本地异常的重试间隔，如本地数据库异常、本地存储异常等，选填项，事件类型\n# 默认值为 3min\n#LocalFailureWait = "3m0s"\n')])])]),a("h3",{attrs:{id:"miners-commitment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment"}},[n._v("#")]),n._v(" [Miners.Commitment]")]),n._v(" "),a("p",[n._v("用于配置封装消息提交策略的通用部分。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[Miners.Commitment]\n# 消息的稳定高度，选填项，数字类型\n# 默认值为 10\n#Confidence = 10\n")])])]),a("h3",{attrs:{id:"miners-commitment-pre"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-pre"}},[n._v("#")]),n._v(" [Miners.Commitment.Pre]")]),n._v(" "),a("p",[n._v("用于配置 "),a("code",[n._v("PreCommit")]),n._v(" 消息提交的策略")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[Miners.Commitment.Pre]\n# 提交上链消息时是否从 Sender 发送必要的资金，选填项，布尔类型\n# 默认值为 true\n#SendFund = true\n\n# 发送地址，必填项，地址类型\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# 单条提交消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为1.2\n#GasOverEstimation = 1.2\n\n# 单条提交消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n\n# 聚合提交的策略配置块\n[Miners.Commitment.Pre.Batch]\n# 是否启用聚合提交，选填项，布尔类型\n# 默认值为 false， 即不启用\n#Enabled = false\n\n# 最小聚合条数，选填项，数字类型\n# 默认值为 16，即最小聚合条数为 16条\n#Threshold = 16\n\n# 最大等待时间，选填项，时间类型\n# 默认值为 1h，即最大等待 1 小时\n#MaxWait = "1h0m0s"\n\n# 检查间隔，选填项，时间类型\n# 默认值为 1min，即每隔 1min 检查一次是否满足聚合条件\n#CheckInterval = "1m0s"\n\n# 聚合提交消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为 1.2\n#GasOverEstimation = 1.2\n\n# 聚合提交消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n')])])]),a("h3",{attrs:{id:"miners-commitment-prove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-prove"}},[n._v("#")]),n._v(" [Miners.Commitment.Prove]")]),n._v(" "),a("p",[n._v("用于配置 "),a("code",[n._v("ProveCommit")]),n._v(" 消息提交的策略，其配置项和作用与 "),a("code",[n._v("Miners.Commitment.Pre")]),n._v("内的完全一致。")]),n._v(" "),a("h3",{attrs:{id:"miners-commitment-terminate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-terminate"}},[n._v("#")]),n._v(" [Miners.Commitment.Terminate]")]),n._v(" "),a("p",[n._v("用于配置 "),a("code",[n._v("TerminateSectors")]),n._v(" 消息提交的策略，其配置项和作用与 "),a("code",[n._v("Miners.Commitment.Pre")]),n._v(" 内的基本一致。实际场景中发送此类消息不会很频繁，建议配置单条提交模式，使用聚合提交模式时,"),a("code",[n._v("Threshold")]),n._v(" 建议配置较小的值，保证消息及时上链。")]),n._v(" "),a("h3",{attrs:{id:"miners-post"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-post"}},[n._v("#")]),n._v(" [Miners.PoSt]")]),n._v(" "),a("p",[n._v("用于配置 "),a("code",[n._v("WindowPoSt")]),n._v(" 的相关策略。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[Miners.PoSt]\n# 发送地址，必填项，地址类型\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n# 是否启用，选填项，布尔类型\n# 默认值为 true\n#Enabled = true\n\n# 是否对扇区文件进行强校验，选填项，布尔类型\n# 默认值为 true\n# 开启时，除了对文件存在性进行判断外，还会尝试读取部分信息，如元数据等\n#StrictCheck = true\n\n# WindowPoSt 消息的 Gas 估算倍数，选填项，浮点数类型\n# 默认值为 1.2\n#GasOverEstimation = 1.2\n\n# WindowPoSt 消息的FeeCap 限制，选填项，FIL值类型\n# 默认值为 5 nanoFIL\n#MaxFeeCap = "5 nanoFIL"\n\n# 消息的稳定高度，选填项，数字类型\n# 默认值为 10\n#Confidence = 10\n\n# 启动 WindowPoSt 的稳定高度，选填项，数字类型\n# 默认值为 10\n# 这个值决定了需要等待多少个高度才认定链进入稳定状态，可以启动 WindowPoSt 任务\n# 此值设定越小，会越早启动，但同时也越容易受到分叉影响\n# 当设置为 0 时，会使用默认值 10\n#ChallengeConfidence = 10\n')])])]),a("h3",{attrs:{id:"miners-proof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-proof"}},[n._v("#")]),n._v(" [Miners.Proof]")]),n._v(" "),a("p",[n._v("用于配置 WinningPoSt Proof 相关的策略")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[Miners.Proof]\n# 是否启用，选填项，布尔类型\n# 默认值为 false\n#Enabled = false\n")])])]),a("h3",{attrs:{id:"miners-deal-已废弃"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#miners-deal-已废弃"}},[n._v("#")]),n._v(" [Miners.Deal] "),a("code",[n._v("已废弃")])]),n._v(" "),a("p",[n._v("用于配置订单相关的策略。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("[Miners.Deal]\n# 是否启用，选填项，布尔类型\n# 默认值为 false\n#Enabled = false\n")])])]),a("h2",{attrs:{id:"一份最简可工作的配置文件范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一份最简可工作的配置文件范例"}},[n._v("#")]),n._v(" 一份最简可工作的配置文件范例")]),n._v(" "),a("p",[n._v("我们以启动支持一个 "),a("code",[n._v("SP")]),n._v("  运作的 "),a("code",[n._v("venus-sector-manager")]),n._v(" 为例，")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('[Common]\n[Common.API]\nChain = "/ip4/{api_host}/tcp/{api_port}"\nMessager = "/ip4/{api_host}/tcp/{api_port}"\nMarket = "/ip4/{api_host}/tcp/{api_port}"\nGateway = ["/ip4/{api_host}/tcp/{api_port}"]\nToken = "{some token}"\n\n[[Common.PieceStores]]\nPath = "{store_path}"\n\n[[Common.PersistStores]]\nName = "{store_name1}"\nPath = "{store_path1}"\n\n[[Common.PersistStores]]\nName = "{store_name2}"\nPath = "{store_path2}"\n\n[[Common.PersistStores]]\nName = "{store_name3}"\nPath = "{store_path3}"\n\n[[Common.PersistStores]]\nName = "{store_name4}"\nPath = "{store_path4}"\n\n[[Miners]]\nActor = 10086\n[Miners.Sector]\nInitNumber = 1000\nEnabled = true\nEnableDeals = true\n\n[Miners.Commitment]\n[Miners.Commitment.Pre]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n[Miners.Commitment.Pre.Batch]\nEnabled = false\n\n[Miners.Commitment.Prove]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\n\n[Miners.Commitment.Prove.Batch]\nEnabled = true\n\n[Miners.PoSt]\nSender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"\nEnabled = true\n\n[Miners.Proof]\nEnabled = true\n\n')])])]),a("p",[n._v("这样就激活了一个：")]),n._v(" "),a("ul",[a("li",[n._v("拥有1个本地 PieceStore")]),n._v(" "),a("li",[n._v("拥有4个本地 持久化 Store")]),n._v(" "),a("li",[n._v("启用扇区分配，其初始编号为1000")]),n._v(" "),a("li",[n._v("不启用聚合 PreCommit")]),n._v(" "),a("li",[n._v("启用聚合 ProveCommit")]),n._v(" "),a("li",[n._v("启用 WinningPoSt 模块")]),n._v(" "),a("li",[n._v("启用订单")])]),n._v(" "),a("p",[n._v("的 "),a("code",[n._v("venus-sector-manager")]),n._v(" 实例。")])])}),[],!1,null,null,null);e.default=s.exports}}]);